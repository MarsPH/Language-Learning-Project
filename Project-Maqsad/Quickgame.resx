<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBw0NCAcIDQ0ICAgHBw0HBwgHBw8IDQgNFREWFhURExMY
        HSggGBolJx8fITEhJSkrOi4uFx8zODM4NygtLiv/2wBDAQoKCg0NDQ8PDxUrGRUZKystKysrKzc3Kyst
        LTc3LSstKy03Ky03KzcrLS0rKysrLSs3KysrNysrLS0tKysrKyv/wAARCAC3ARMDASIAAhEBAxEB/8QA
        GQABAQEBAQEAAAAAAAAAAAAAAQACBAUH/8QAFhABAQEAAAAAAAAAAAAAAAAAAAER/8QAGgEBAQEBAQEB
        AAAAAAAAAAAAAQACAwQGBf/EABgRAQEBAQEAAAAAAAAAAAAAAAABEQIS/9oADAMBAAIRAxEAPwD7Q1GY
        Y06FqMmVM1pBBkpJBJJBJIpJBEoJIhDUToQSSoFRiQRagSFJFZIKTNNZQqoSQALNpGnUyUNdsQic3WtG
        MwpitSrQky1Ezp1AoapUihUkUNSRWspIhBEhBJJCkoIFqKhAlCqipCgilkCoJnUzTayQdTKWDXdFrMLk
        71qHWYUzWkzKdTJWgoHVoSB1Mo4mtWspYigtSKGpJJBY1EFQSkmaWlaELUlQhSytZIpZ1M2q1lMqi1UE
        akkg7UzKXN6rGixK0MZKC1M1pArAUAsDSZSTWjQijqC1IoakkgkUgLS1IrQgiqEKcZtWhAs1Ws2ms0s6
        qyayhSzVRTjGpDUcGu2U6xKXF7q1KdZOplpDVKg0hqTOHSykDq1BA6tC0ooaNRxoaNAONatZ1EyG0DRp
        JtCCFVoQ0sWoWq1nSzVRVayWbSzagcZtVZtVBZtKZ1FnXYdZLg/Tsa0ysyrUzY3q1mU6mWtWsrUG9GjV
        qGHTrOrUsOoatSwoatSxIatJI1DUiFrJB1aNGlm0s2i0WnGbVaNWi04xarQtZtOMWnWbRaCxatCo0s2p
        ALGddumVla4P2cbLMp1M41KWNOpnGkzp1DDq0LUMa1azqSxrVrK1LChqKK1nUsBWs2jSLWho0ambTaNF
        o1rGLVo1aNLFqFotFpYtVo0C04xaWbVaycYtOi0Wi0sWrSzqQ9O0hPO/ealOsrUK0tCTLWllasGNLWdR
        TRZWoNJnRqDejWdWplrRo0aWbTqAqxm06NGhrGLTotFo0sWm0Wi1nTjFp0aLRacc7VaLRazaWLWtZtGj
        TjFptGjRpxi1ahqOD09AhPI+i0oHSyUzpS06tBQKCTOnVoWoaVrK04NaGs6tOM2tJnVpxi06NGjSxabR
        azotOMWnRaNGnHO9G0Wi1m1rHO9G0Ws6LTjF6NotFrOnHO9NaNZtGnGL01otZtGlm06hqQ16iCeJ9LqW
        pEIhIaUNWlnTq0aNQ1paytOM2taNGrTjNpWs6LSza1o1lacYtOjRaNOOdptGi0WlzvRtZtFrOtSOd6Oi
        0Ws2tY53pq0azaza1jlemrRazo1Yxejo0atLPooIYzpSSL1Ek8L6fUEMLOmC1IjUtAI06tCLFpWjRpZ1
        rRo0aWbSho04xa1o1nRaWLWtGs2jTjnejaLRaza1I53o2i0Ws2tSOV6NrNrNo1qRx66No0aNaxyvR1ay
        dWM+khqA0tRmGIxpBMtPVVCeF9PULSiGUkWQkjGUEmmaAkWakEWKtGpFijWdKMc6NGpNufVZtARjlRaz
        ak049UM1JqOPVZtWpNOVq1akhq0xIUwmJMtwpINv/9k=
</value>
  </data>
</root>